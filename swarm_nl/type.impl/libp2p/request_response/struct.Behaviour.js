(function() {var type_impls = {
"libp2p":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Behaviour%3CTCodec%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/libp2p_request_response/lib.rs.html#366-368\">source</a><a href=\"#impl-Behaviour%3CTCodec%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;TCodec&gt; <a class=\"struct\" href=\"libp2p/request_response/struct.Behaviour.html\" title=\"struct libp2p::request_response::Behaviour\">Behaviour</a>&lt;TCodec&gt;<div class=\"where\">where\n    TCodec: <a class=\"trait\" href=\"libp2p/request_response/trait.Codec.html\" title=\"trait libp2p::request_response::Codec\">Codec</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/libp2p_request_response/lib.rs.html#371-373\">source</a><h4 class=\"code-header\">pub fn <a href=\"libp2p/request_response/struct.Behaviour.html#tymethod.new\" class=\"fn\">new</a>&lt;I&gt;(protocols: I, cfg: <a class=\"struct\" href=\"libp2p/request_response/struct.Config.html\" title=\"struct libp2p::request_response::Config\">Config</a>) -&gt; <a class=\"struct\" href=\"libp2p/request_response/struct.Behaviour.html\" title=\"struct libp2p::request_response::Behaviour\">Behaviour</a>&lt;TCodec&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = (&lt;TCodec as <a class=\"trait\" href=\"libp2p/request_response/trait.Codec.html\" title=\"trait libp2p::request_response::Codec\">Codec</a>&gt;::<a class=\"associatedtype\" href=\"libp2p/request_response/trait.Codec.html#associatedtype.Protocol\" title=\"type libp2p::request_response::Codec::Protocol\">Protocol</a>, <a class=\"enum\" href=\"libp2p/request_response/enum.ProtocolSupport.html\" title=\"enum libp2p::request_response::ProtocolSupport\">ProtocolSupport</a>)&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Creates a new <code>Behaviour</code> for the given protocols and configuration, using <a href=\"https://doc.rust-lang.org/1.77.0/core/default/trait.Default.html\" title=\"trait core::default::Default\"><code>Default</code></a> to construct the codec.</p>\n</div></details></div></details>",0,"libp2p::request_response::cbor::Behaviour"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Behaviour%3CTCodec%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/libp2p_request_response/lib.rs.html#379-381\">source</a><a href=\"#impl-Behaviour%3CTCodec%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;TCodec&gt; <a class=\"struct\" href=\"libp2p/request_response/struct.Behaviour.html\" title=\"struct libp2p::request_response::Behaviour\">Behaviour</a>&lt;TCodec&gt;<div class=\"where\">where\n    TCodec: <a class=\"trait\" href=\"libp2p/request_response/trait.Codec.html\" title=\"trait libp2p::request_response::Codec\">Codec</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_codec\" class=\"method\"><a class=\"src rightside\" href=\"src/libp2p_request_response/lib.rs.html#385-387\">source</a><h4 class=\"code-header\">pub fn <a href=\"libp2p/request_response/struct.Behaviour.html#tymethod.with_codec\" class=\"fn\">with_codec</a>&lt;I&gt;(\n    codec: TCodec,\n    protocols: I,\n    cfg: <a class=\"struct\" href=\"libp2p/request_response/struct.Config.html\" title=\"struct libp2p::request_response::Config\">Config</a>\n) -&gt; <a class=\"struct\" href=\"libp2p/request_response/struct.Behaviour.html\" title=\"struct libp2p::request_response::Behaviour\">Behaviour</a>&lt;TCodec&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = (&lt;TCodec as <a class=\"trait\" href=\"libp2p/request_response/trait.Codec.html\" title=\"trait libp2p::request_response::Codec\">Codec</a>&gt;::<a class=\"associatedtype\" href=\"libp2p/request_response/trait.Codec.html#associatedtype.Protocol\" title=\"type libp2p::request_response::Codec::Protocol\">Protocol</a>, <a class=\"enum\" href=\"libp2p/request_response/enum.ProtocolSupport.html\" title=\"enum libp2p::request_response::ProtocolSupport\">ProtocolSupport</a>)&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Creates a new <code>Behaviour</code> for the given\nprotocols, codec and configuration.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.send_request\" class=\"method\"><a class=\"src rightside\" href=\"src/libp2p_request_response/lib.rs.html#425\">source</a><h4 class=\"code-header\">pub fn <a href=\"libp2p/request_response/struct.Behaviour.html#tymethod.send_request\" class=\"fn\">send_request</a>(\n    &amp;mut self,\n    peer: &amp;<a class=\"struct\" href=\"libp2p/struct.PeerId.html\" title=\"struct libp2p::PeerId\">PeerId</a>,\n    request: &lt;TCodec as <a class=\"trait\" href=\"libp2p/request_response/trait.Codec.html\" title=\"trait libp2p::request_response::Codec\">Codec</a>&gt;::<a class=\"associatedtype\" href=\"libp2p/request_response/trait.Codec.html#associatedtype.Request\" title=\"type libp2p::request_response::Codec::Request\">Request</a>\n) -&gt; <a class=\"struct\" href=\"libp2p/request_response/struct.OutboundRequestId.html\" title=\"struct libp2p::request_response::OutboundRequestId\">OutboundRequestId</a></h4></section></summary><div class=\"docblock\"><p>Initiates sending a request.</p>\n<p>If the targeted peer is currently not connected, a dialing\nattempt is initiated and the request is sent as soon as a\nconnection is established.</p>\n<blockquote>\n<p><strong>Note</strong>: In order for such a dialing attempt to succeed,\nthe <code>RequestResonse</code> protocol must either be embedded\nin another <code>NetworkBehaviour</code> that provides peer and\naddress discovery, or known addresses of peers must be\nmanaged via <a href=\"libp2p/request_response/struct.Behaviour.html#method.add_address\" title=\"method libp2p::request_response::Behaviour::add_address\"><code>Behaviour::add_address</code></a> and\n<a href=\"libp2p/request_response/struct.Behaviour.html#method.remove_address\" title=\"method libp2p::request_response::Behaviour::remove_address\"><code>Behaviour::remove_address</code></a>.</p>\n</blockquote>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.send_response\" class=\"method\"><a class=\"src rightside\" href=\"src/libp2p_request_response/lib.rs.html#457-461\">source</a><h4 class=\"code-header\">pub fn <a href=\"libp2p/request_response/struct.Behaviour.html#tymethod.send_response\" class=\"fn\">send_response</a>(\n    &amp;mut self,\n    ch: <a class=\"struct\" href=\"libp2p/request_response/struct.ResponseChannel.html\" title=\"struct libp2p::request_response::ResponseChannel\">ResponseChannel</a>&lt;&lt;TCodec as <a class=\"trait\" href=\"libp2p/request_response/trait.Codec.html\" title=\"trait libp2p::request_response::Codec\">Codec</a>&gt;::<a class=\"associatedtype\" href=\"libp2p/request_response/trait.Codec.html#associatedtype.Response\" title=\"type libp2p::request_response::Codec::Response\">Response</a>&gt;,\n    rs: &lt;TCodec as <a class=\"trait\" href=\"libp2p/request_response/trait.Codec.html\" title=\"trait libp2p::request_response::Codec\">Codec</a>&gt;::<a class=\"associatedtype\" href=\"libp2p/request_response/trait.Codec.html#associatedtype.Response\" title=\"type libp2p::request_response::Codec::Response\">Response</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, &lt;TCodec as <a class=\"trait\" href=\"libp2p/request_response/trait.Codec.html\" title=\"trait libp2p::request_response::Codec\">Codec</a>&gt;::<a class=\"associatedtype\" href=\"libp2p/request_response/trait.Codec.html#associatedtype.Response\" title=\"type libp2p::request_response::Codec::Response\">Response</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Initiates sending a response to an inbound request.</p>\n<p>If the <a href=\"libp2p/request_response/struct.ResponseChannel.html\" title=\"struct libp2p::request_response::ResponseChannel\"><code>ResponseChannel</code></a> is already closed due to a timeout or the\nconnection being closed, the response is returned as an <code>Err</code> for\nfurther handling. Once the response has been successfully sent on the\ncorresponding connection, <a href=\"libp2p/request_response/enum.Event.html#variant.ResponseSent\" title=\"variant libp2p::request_response::Event::ResponseSent\"><code>Event::ResponseSent</code></a> is\nemitted. In all other cases <a href=\"libp2p/request_response/enum.Event.html#variant.InboundFailure\" title=\"variant libp2p::request_response::Event::InboundFailure\"><code>Event::InboundFailure</code></a>\nwill be or has been emitted.</p>\n<p>The provided <code>ResponseChannel</code> is obtained from an inbound\n<a href=\"libp2p/request_response/enum.Message.html#variant.Request\" title=\"variant libp2p::request_response::Message::Request\"><code>Message::Request</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_address\" class=\"method\"><a class=\"src rightside\" href=\"src/libp2p_request_response/lib.rs.html#474\">source</a><h4 class=\"code-header\">pub fn <a href=\"libp2p/request_response/struct.Behaviour.html#tymethod.add_address\" class=\"fn\">add_address</a>(&amp;mut self, peer: &amp;<a class=\"struct\" href=\"libp2p/struct.PeerId.html\" title=\"struct libp2p::PeerId\">PeerId</a>, address: <a class=\"struct\" href=\"libp2p/struct.Multiaddr.html\" title=\"struct libp2p::Multiaddr\">Multiaddr</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">๐</span><span>Deprecated: Use <code>Swarm::add_peer_address</code> instead.</span></div></span></summary><div class=\"docblock\"><p>Adds a known address for a peer that can be used for\ndialing attempts by the <code>Swarm</code>, i.e. is returned\nby <a href=\"libp2p/swarm/trait.NetworkBehaviour.html#method.handle_pending_outbound_connection\" title=\"method libp2p::swarm::NetworkBehaviour::handle_pending_outbound_connection\"><code>NetworkBehaviour::handle_pending_outbound_connection</code></a>.</p>\n<p>Addresses added in this way are only removed by <code>remove_address</code>.</p>\n<p>Returns true if the address was added, false otherwise (i.e. if the\naddress is already in the list).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_address\" class=\"method\"><a class=\"src rightside\" href=\"src/libp2p_request_response/lib.rs.html#480\">source</a><h4 class=\"code-header\">pub fn <a href=\"libp2p/request_response/struct.Behaviour.html#tymethod.remove_address\" class=\"fn\">remove_address</a>(&amp;mut self, peer: &amp;<a class=\"struct\" href=\"libp2p/struct.PeerId.html\" title=\"struct libp2p::PeerId\">PeerId</a>, address: &amp;<a class=\"struct\" href=\"libp2p/struct.Multiaddr.html\" title=\"struct libp2p::Multiaddr\">Multiaddr</a>)</h4></section><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">๐</span><span>Deprecated: Will be removed with the next breaking release and wonโt be replaced.</span></div></span></summary><div class=\"docblock\"><p>Removes an address of a peer previously added via <a href=\"libp2p/request_response/struct.Behaviour.html#method.add_address\" title=\"method libp2p::request_response::Behaviour::add_address\"><code>Behaviour::add_address</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_connected\" class=\"method\"><a class=\"src rightside\" href=\"src/libp2p_request_response/lib.rs.html#485\">source</a><h4 class=\"code-header\">pub fn <a href=\"libp2p/request_response/struct.Behaviour.html#tymethod.is_connected\" class=\"fn\">is_connected</a>(&amp;self, peer: &amp;<a class=\"struct\" href=\"libp2p/struct.PeerId.html\" title=\"struct libp2p::PeerId\">PeerId</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Checks whether a peer is currently connected.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_pending_outbound\" class=\"method\"><a class=\"src rightside\" href=\"src/libp2p_request_response/lib.rs.html#496\">source</a><h4 class=\"code-header\">pub fn <a href=\"libp2p/request_response/struct.Behaviour.html#tymethod.is_pending_outbound\" class=\"fn\">is_pending_outbound</a>(\n    &amp;self,\n    peer: &amp;<a class=\"struct\" href=\"libp2p/struct.PeerId.html\" title=\"struct libp2p::PeerId\">PeerId</a>,\n    request_id: &amp;<a class=\"struct\" href=\"libp2p/request_response/struct.OutboundRequestId.html\" title=\"struct libp2p::request_response::OutboundRequestId\">OutboundRequestId</a>\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Checks whether an outbound request to the peer with the provided\n<a href=\"libp2p/struct.PeerId.html\" title=\"struct libp2p::PeerId\"><code>PeerId</code></a> initiated by <a href=\"libp2p/request_response/struct.Behaviour.html#method.send_request\" title=\"method libp2p::request_response::Behaviour::send_request\"><code>Behaviour::send_request</code></a> is still\npending, i.e. waiting for a response.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_pending_inbound\" class=\"method\"><a class=\"src rightside\" href=\"src/libp2p_request_response/lib.rs.html#519\">source</a><h4 class=\"code-header\">pub fn <a href=\"libp2p/request_response/struct.Behaviour.html#tymethod.is_pending_inbound\" class=\"fn\">is_pending_inbound</a>(\n    &amp;self,\n    peer: &amp;<a class=\"struct\" href=\"libp2p/struct.PeerId.html\" title=\"struct libp2p::PeerId\">PeerId</a>,\n    request_id: &amp;<a class=\"struct\" href=\"libp2p/request_response/struct.InboundRequestId.html\" title=\"struct libp2p::request_response::InboundRequestId\">InboundRequestId</a>\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Checks whether an inbound request from the peer with the provided\n<a href=\"libp2p/struct.PeerId.html\" title=\"struct libp2p::PeerId\"><code>PeerId</code></a> is still pending, i.e. waiting for a response by the local\nnode through <a href=\"libp2p/request_response/struct.Behaviour.html#method.send_response\" title=\"method libp2p::request_response::Behaviour::send_response\"><code>Behaviour::send_response</code></a>.</p>\n</div></details></div></details>",0,"libp2p::request_response::cbor::Behaviour"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NetworkBehaviour-for-Behaviour%3CTCodec%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/libp2p_request_response/lib.rs.html#719-721\">source</a><a href=\"#impl-NetworkBehaviour-for-Behaviour%3CTCodec%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;TCodec&gt; <a class=\"trait\" href=\"libp2p/swarm/trait.NetworkBehaviour.html\" title=\"trait libp2p::swarm::NetworkBehaviour\">NetworkBehaviour</a> for <a class=\"struct\" href=\"libp2p/request_response/struct.Behaviour.html\" title=\"struct libp2p::request_response::Behaviour\">Behaviour</a>&lt;TCodec&gt;<div class=\"where\">where\n    TCodec: <a class=\"trait\" href=\"libp2p/request_response/trait.Codec.html\" title=\"trait libp2p::request_response::Codec\">Codec</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.ConnectionHandler\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ConnectionHandler\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"libp2p/swarm/trait.NetworkBehaviour.html#associatedtype.ConnectionHandler\" class=\"associatedtype\">ConnectionHandler</a> = Handler&lt;TCodec&gt;</h4></section></summary><div class='docblock'>Handler for all the protocols the network behaviour supports.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.ToSwarm\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.ToSwarm\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"libp2p/swarm/trait.NetworkBehaviour.html#associatedtype.ToSwarm\" class=\"associatedtype\">ToSwarm</a> = <a class=\"enum\" href=\"libp2p/request_response/enum.Event.html\" title=\"enum libp2p::request_response::Event\">Event</a>&lt;&lt;TCodec as <a class=\"trait\" href=\"libp2p/request_response/trait.Codec.html\" title=\"trait libp2p::request_response::Codec\">Codec</a>&gt;::<a class=\"associatedtype\" href=\"libp2p/request_response/trait.Codec.html#associatedtype.Request\" title=\"type libp2p::request_response::Codec::Request\">Request</a>, &lt;TCodec as <a class=\"trait\" href=\"libp2p/request_response/trait.Codec.html\" title=\"trait libp2p::request_response::Codec\">Codec</a>&gt;::<a class=\"associatedtype\" href=\"libp2p/request_response/trait.Codec.html#associatedtype.Response\" title=\"type libp2p::request_response::Codec::Response\">Response</a>&gt;</h4></section></summary><div class='docblock'>Event generated by the <code>NetworkBehaviour</code> and that the swarm will report back.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.handle_established_inbound_connection\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_request_response/lib.rs.html#726-732\">source</a><a href=\"#method.handle_established_inbound_connection\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"libp2p/swarm/trait.NetworkBehaviour.html#tymethod.handle_established_inbound_connection\" class=\"fn\">handle_established_inbound_connection</a>(\n    &amp;mut self,\n    connection_id: <a class=\"struct\" href=\"libp2p/swarm/struct.ConnectionId.html\" title=\"struct libp2p::swarm::ConnectionId\">ConnectionId</a>,\n    peer: <a class=\"struct\" href=\"libp2p/struct.PeerId.html\" title=\"struct libp2p::PeerId\">PeerId</a>,\n    _: &amp;<a class=\"struct\" href=\"libp2p/struct.Multiaddr.html\" title=\"struct libp2p::Multiaddr\">Multiaddr</a>,\n    _: &amp;<a class=\"struct\" href=\"libp2p/struct.Multiaddr.html\" title=\"struct libp2p::Multiaddr\">Multiaddr</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;<a class=\"struct\" href=\"libp2p/request_response/struct.Behaviour.html\" title=\"struct libp2p::request_response::Behaviour\">Behaviour</a>&lt;TCodec&gt; as <a class=\"trait\" href=\"libp2p/swarm/trait.NetworkBehaviour.html\" title=\"trait libp2p::swarm::NetworkBehaviour\">NetworkBehaviour</a>&gt;::<a class=\"associatedtype\" href=\"libp2p/swarm/trait.NetworkBehaviour.html#associatedtype.ConnectionHandler\" title=\"type libp2p::swarm::NetworkBehaviour::ConnectionHandler\">ConnectionHandler</a>, <a class=\"struct\" href=\"libp2p/swarm/struct.ConnectionDenied.html\" title=\"struct libp2p::swarm::ConnectionDenied\">ConnectionDenied</a>&gt;</h4></section></summary><div class='docblock'>Callback that is invoked for every established inbound connection. <a href=\"libp2p/swarm/trait.NetworkBehaviour.html#tymethod.handle_established_inbound_connection\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.handle_pending_outbound_connection\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_request_response/lib.rs.html#746-752\">source</a><a href=\"#method.handle_pending_outbound_connection\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"libp2p/swarm/trait.NetworkBehaviour.html#method.handle_pending_outbound_connection\" class=\"fn\">handle_pending_outbound_connection</a>(\n    &amp;mut self,\n    _connection_id: <a class=\"struct\" href=\"libp2p/swarm/struct.ConnectionId.html\" title=\"struct libp2p::swarm::ConnectionId\">ConnectionId</a>,\n    maybe_peer: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"libp2p/struct.PeerId.html\" title=\"struct libp2p::PeerId\">PeerId</a>&gt;,\n    _addresses: &amp;[<a class=\"struct\" href=\"libp2p/struct.Multiaddr.html\" title=\"struct libp2p::Multiaddr\">Multiaddr</a>],\n    _effective_role: <a class=\"enum\" href=\"libp2p/core/enum.Endpoint.html\" title=\"enum libp2p::core::Endpoint\">Endpoint</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"libp2p/struct.Multiaddr.html\" title=\"struct libp2p::Multiaddr\">Multiaddr</a>&gt;, <a class=\"struct\" href=\"libp2p/swarm/struct.ConnectionDenied.html\" title=\"struct libp2p::swarm::ConnectionDenied\">ConnectionDenied</a>&gt;</h4></section></summary><div class='docblock'>Callback that is invoked for every outbound connection attempt. <a href=\"libp2p/swarm/trait.NetworkBehaviour.html#method.handle_pending_outbound_connection\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.handle_established_outbound_connection\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_request_response/lib.rs.html#769-775\">source</a><a href=\"#method.handle_established_outbound_connection\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"libp2p/swarm/trait.NetworkBehaviour.html#tymethod.handle_established_outbound_connection\" class=\"fn\">handle_established_outbound_connection</a>(\n    &amp;mut self,\n    connection_id: <a class=\"struct\" href=\"libp2p/swarm/struct.ConnectionId.html\" title=\"struct libp2p::swarm::ConnectionId\">ConnectionId</a>,\n    peer: <a class=\"struct\" href=\"libp2p/struct.PeerId.html\" title=\"struct libp2p::PeerId\">PeerId</a>,\n    remote_address: &amp;<a class=\"struct\" href=\"libp2p/struct.Multiaddr.html\" title=\"struct libp2p::Multiaddr\">Multiaddr</a>,\n    _: <a class=\"enum\" href=\"libp2p/core/enum.Endpoint.html\" title=\"enum libp2p::core::Endpoint\">Endpoint</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;<a class=\"struct\" href=\"libp2p/request_response/struct.Behaviour.html\" title=\"struct libp2p::request_response::Behaviour\">Behaviour</a>&lt;TCodec&gt; as <a class=\"trait\" href=\"libp2p/swarm/trait.NetworkBehaviour.html\" title=\"trait libp2p::swarm::NetworkBehaviour\">NetworkBehaviour</a>&gt;::<a class=\"associatedtype\" href=\"libp2p/swarm/trait.NetworkBehaviour.html#associatedtype.ConnectionHandler\" title=\"type libp2p::swarm::NetworkBehaviour::ConnectionHandler\">ConnectionHandler</a>, <a class=\"struct\" href=\"libp2p/swarm/struct.ConnectionDenied.html\" title=\"struct libp2p::swarm::ConnectionDenied\">ConnectionDenied</a>&gt;</h4></section></summary><div class='docblock'>Callback that is invoked for every established outbound connection. <a href=\"libp2p/swarm/trait.NetworkBehaviour.html#tymethod.handle_established_outbound_connection\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_swarm_event\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_request_response/lib.rs.html#794\">source</a><a href=\"#method.on_swarm_event\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"libp2p/swarm/trait.NetworkBehaviour.html#tymethod.on_swarm_event\" class=\"fn\">on_swarm_event</a>(&amp;mut self, event: <a class=\"enum\" href=\"libp2p/swarm/enum.FromSwarm.html\" title=\"enum libp2p::swarm::FromSwarm\">FromSwarm</a>&lt;'_&gt;)</h4></section></summary><div class='docblock'>Informs the behaviour about an event from the <a href=\"libp2p/struct.Swarm.html\" title=\"struct libp2p::Swarm\"><code>Swarm</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.on_connection_handler_event\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_request_response/lib.rs.html#807-812\">source</a><a href=\"#method.on_connection_handler_event\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"libp2p/swarm/trait.NetworkBehaviour.html#tymethod.on_connection_handler_event\" class=\"fn\">on_connection_handler_event</a>(\n    &amp;mut self,\n    peer: <a class=\"struct\" href=\"libp2p/struct.PeerId.html\" title=\"struct libp2p::PeerId\">PeerId</a>,\n    connection: <a class=\"struct\" href=\"libp2p/swarm/struct.ConnectionId.html\" title=\"struct libp2p::swarm::ConnectionId\">ConnectionId</a>,\n    event: &lt;&lt;<a class=\"struct\" href=\"libp2p/request_response/struct.Behaviour.html\" title=\"struct libp2p::request_response::Behaviour\">Behaviour</a>&lt;TCodec&gt; as <a class=\"trait\" href=\"libp2p/swarm/trait.NetworkBehaviour.html\" title=\"trait libp2p::swarm::NetworkBehaviour\">NetworkBehaviour</a>&gt;::<a class=\"associatedtype\" href=\"libp2p/swarm/trait.NetworkBehaviour.html#associatedtype.ConnectionHandler\" title=\"type libp2p::swarm::NetworkBehaviour::ConnectionHandler\">ConnectionHandler</a> as <a class=\"trait\" href=\"libp2p/swarm/trait.ConnectionHandler.html\" title=\"trait libp2p::swarm::ConnectionHandler\">ConnectionHandler</a>&gt;::<a class=\"associatedtype\" href=\"libp2p/swarm/trait.ConnectionHandler.html#associatedtype.ToBehaviour\" title=\"type libp2p::swarm::ConnectionHandler::ToBehaviour\">ToBehaviour</a>\n)</h4></section></summary><div class='docblock'>Informs the behaviour about an event generated by the <a href=\"libp2p/swarm/trait.ConnectionHandler.html\" title=\"trait libp2p::swarm::ConnectionHandler\"><code>ConnectionHandler</code></a>\ndedicated to the peer identified by <code>peer_id</code>. for the behaviour. <a href=\"libp2p/swarm/trait.NetworkBehaviour.html#tymethod.on_connection_handler_event\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_request_response/lib.rs.html#954\">source</a><a href=\"#method.poll\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"libp2p/swarm/trait.NetworkBehaviour.html#tymethod.poll\" class=\"fn\">poll</a>(\n    &amp;mut self,\n    _: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.0/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"libp2p/swarm/enum.ToSwarm.html\" title=\"enum libp2p::swarm::ToSwarm\">ToSwarm</a>&lt;&lt;<a class=\"struct\" href=\"libp2p/request_response/struct.Behaviour.html\" title=\"struct libp2p::request_response::Behaviour\">Behaviour</a>&lt;TCodec&gt; as <a class=\"trait\" href=\"libp2p/swarm/trait.NetworkBehaviour.html\" title=\"trait libp2p::swarm::NetworkBehaviour\">NetworkBehaviour</a>&gt;::<a class=\"associatedtype\" href=\"libp2p/swarm/trait.NetworkBehaviour.html#associatedtype.ToSwarm\" title=\"type libp2p::swarm::NetworkBehaviour::ToSwarm\">ToSwarm</a>, &lt;&lt;<a class=\"struct\" href=\"libp2p/request_response/struct.Behaviour.html\" title=\"struct libp2p::request_response::Behaviour\">Behaviour</a>&lt;TCodec&gt; as <a class=\"trait\" href=\"libp2p/swarm/trait.NetworkBehaviour.html\" title=\"trait libp2p::swarm::NetworkBehaviour\">NetworkBehaviour</a>&gt;::<a class=\"associatedtype\" href=\"libp2p/swarm/trait.NetworkBehaviour.html#associatedtype.ConnectionHandler\" title=\"type libp2p::swarm::NetworkBehaviour::ConnectionHandler\">ConnectionHandler</a> as <a class=\"trait\" href=\"libp2p/swarm/trait.ConnectionHandler.html\" title=\"trait libp2p::swarm::ConnectionHandler\">ConnectionHandler</a>&gt;::<a class=\"associatedtype\" href=\"libp2p/swarm/trait.ConnectionHandler.html#associatedtype.FromBehaviour\" title=\"type libp2p::swarm::ConnectionHandler::FromBehaviour\">FromBehaviour</a>&gt;&gt;</h4></section></summary><div class='docblock'>Polls for things that swarm should do. <a href=\"libp2p/swarm/trait.NetworkBehaviour.html#tymethod.poll\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.handle_pending_inbound_connection\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/libp2p_swarm/behaviour.rs.html#135-140\">source</a><a href=\"#method.handle_pending_inbound_connection\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"libp2p/swarm/trait.NetworkBehaviour.html#method.handle_pending_inbound_connection\" class=\"fn\">handle_pending_inbound_connection</a>(\n    &amp;mut self,\n    _connection_id: <a class=\"struct\" href=\"libp2p/swarm/struct.ConnectionId.html\" title=\"struct libp2p::swarm::ConnectionId\">ConnectionId</a>,\n    _local_addr: &amp;<a class=\"struct\" href=\"libp2p/struct.Multiaddr.html\" title=\"struct libp2p::Multiaddr\">Multiaddr</a>,\n    _remote_addr: &amp;<a class=\"struct\" href=\"libp2p/struct.Multiaddr.html\" title=\"struct libp2p::Multiaddr\">Multiaddr</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"libp2p/swarm/struct.ConnectionDenied.html\" title=\"struct libp2p::swarm::ConnectionDenied\">ConnectionDenied</a>&gt;</h4></section></summary><div class='docblock'>Callback that is invoked for every new inbound connection. <a href=\"libp2p/swarm/trait.NetworkBehaviour.html#method.handle_pending_inbound_connection\">Read more</a></div></details></div></details>","NetworkBehaviour","libp2p::request_response::cbor::Behaviour"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()